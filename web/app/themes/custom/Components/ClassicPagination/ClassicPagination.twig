{% macro ClassicPagination(props) %}
  {#
      ClassicPagination
      This component is a classic pagination without ajax.

      Result : 
      << 1,2,3...10 >>

      @param {string} id The id of the menu
      @param {array} classes List of css classes
      @param {array[string]} attributes The Array contain the extra attributes or used for merged the attributes. example : class attribute
      @param {string} props.prev The props.previous link
      @param {string} props.next The props.next link
      @param {array} props.pages Array of objects [{link,title,current},...]
      @param {string} type Type of pagination ('classic')
  #}

  {# Output #}
  <nav {{ 
    {
      id: props.id,
      class: (props.classes ?? [])|merge(['classic-pagination']),
      role: 'navigation',
      'aria-label': 'Classic Pagination Navigation',
      'data-type': props.type ?? 'classic',
    }|arrayToAttributesHTML(props.attributes)
  }}>
    {% if props.pages %}
      <ul>
        <li>
          {% if props.prev %}
            <a href="{{ props.prev.link }}">«</a>
          {% else %}
            <a>{{ props.prev.text ?? '«' }}</a>
          {% endif %}
        </li>
        {% for page in props.pages %}
          <li>
            {% if page.link %}
              <a href="{{ page.link }}">{{ page.title }}</a>
            {% else %}
              {% if page.current %}
                <a aria-current="page" class="current">{{ page.title }}</a>
              {% else %}
                <a class="spacer">{{ page.title }}</a>
              {% endif %}
            {% endif %}
          </li>
        {% endfor %}
        <li>
          {% if props.next %}
            <a href="{{ props.next.link }}">»</a>
          {% else %}
            <a>{{ props.next.text ?? '»' }}</a>
          {% endif %}
        </li>
      </ul>
    {% endif %}
  </nav>
{% endmacro %}
